.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Diaspora::Bot 3pm"
.TH Diaspora::Bot 3pm "2012-02-08" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Diaspora::Bot \- A perl interface to the diaspora social network.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\& use Diaspora::Bot;
\& my $d = Diaspora::Bot\->new(
\&                             pod    => \*(Aqhttps://foo.bar\*(Aq,
\&                             user   => \*(Aqyourbot\*(Aq,
\&                             passwd => \*(Aqsecret\*(Aq
\&                           );
\& $d\->post(
\&           uri     => \*(Aq/status_messages\*(Aq,
\&           message => {
\&                        status_message => { text => \*(Aqblah..\*(Aq },
\&                        aspect_ids     => \*(Aqpublic\*(Aq
\&                      }
\&         );
\&
\& my $hashref = $d\->get(uri => \*(Aq/conversations\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBThis document describes Diaspora::Bot version 0.01.\fR
.PP
Diaspora* is a federated social network. This module
provides an \s-1API\s0 to access diaspora by using perl using
its json \s-1HTTP\s0 interface.
.PP
In order to use it, you'll have to create an account
for your bot first on your pod.
.PP
The module doesn't \*(L"know\*(R" the \s-1API\s0 urls of Diaspora*, you
have to provide them when calling \fIpost()\fR or \fIget()\fR.
Once the \s-1API\s0 gets official and stable a more abstract
interface might be added to the module. However, the
lowlevel methods  \fIpost()\fR or \fIget()\fR will remain
anyway.
.SH "LOGIN"
.IX Header "LOGIN"
The module does automatically login to Diaspora* if
required. As long as you don't call \fIpost()\fR or \fIget()\fR
nothing will happen.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fIpost()\fP"
.IX Subsection "post()"
.Vb 7
\& $d\->post(
\&           uri     => \*(Aq/status_messages\*(Aq,
\&           message => {
\&                        status_message => { text => \*(Aqblah..\*(Aq },
\&                        aspect_ids     => \*(Aqpublic\*(Aq
\&                      }
\&         );
.Ve
.PP
The \fB\f(BIpost()\fB\fR method posts a \s-1JSON\s0 encoded message to
Diaspora*. The message will be automatically converted
to \s-1JSON\s0, all you have to do is to provide a perl hash
reference.
.PP
If you use the \fB\f(BIpost()\fB\fR method to send a posting, then
you are responsible to format it using the Diaspora*
wiki syntax. You might use the method \fIwc()\fR for this
which is in fact an HTML::WikiConverter object loaded
with the required syntax submodule.
.PP
The \fB\f(BIpost()\fB\fR method automatically logs into Diaspora*
if not already done so and the module remains logged in,
until the program ends or you call the \fIlogout()\fR method.
.SS "\fIget()\fP"
.IX Subsection "get()"
.Vb 1
\& my $hashref = $d\->get(uri => \*(Aq/conversations\*(Aq);
.Ve
.PP
The \fB\f(BIget()\fB\fR method fetches something from Diaspora*.
Like with \fIpost()\fR, you have to provide the url for
this yourself.
.PP
It also logs in automatically and returns a hashref
of what Diaspora* returned.
.PP
See https://github.com/diaspora/diaspora/wiki/API\-v1 <https://github.com/diaspora/diaspora/wiki/API-v1>
for details how the structure will look like.
.SS "\fIlogout()\fP"
.IX Subsection "logout()"
.Vb 1
\& $d\->logout();
.Ve
.PP
You can call \fB\f(BIlogout()\fB\fR if you want/need, but it's
optional. The session will be stored in memory only,
so if you just finish the program, the session is lost.
.SS "\fIwc()\fP"
.IX Subsection "wc()"
.Vb 1
\& my $wifified = $d\->wc( html => \*(Aq<a href="/blah">blubb</a>\*(Aq);
.Ve
.PP
returns:
.PP
.Vb 1
\& [blubb](/blah)
.Ve
.PP
This is just an HTML::WikiConverter object which
can be used to convert \s-1HTML\s0 to Diaspora* wiki syntax.
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2012 \s-1FIXME\s0
.PP
This library is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
See <http://rt.cpan.org> or https://github.com/spkdev/diaspora\-rss\-bot/issues <https://github.com/spkdev/diaspora-rss-bot/issues>
for current bugs, if any.
.SH "INCOMPATIBILITIES"
.IX Header "INCOMPATIBILITIES"
None known.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
To debug Diaspora::Bot use the Perl debugger, see perldebug.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
Diaspora::Bot depends on the following modules:
.IP "File::Pid" 4
.IX Item "File::Pid"
.PD 0
.IP "XML::FeedPP" 4
.IX Item "XML::FeedPP"
.IP "Getopt::Long" 4
.IX Item "Getopt::Long"
.IP "Config::Tiny" 4
.IX Item "Config::Tiny"
.IP "Digest::MD5" 4
.IX Item "Digest::MD5"
.IP "DBD::SQLite" 4
.IX Item "DBD::SQLite"
.IP "LWP::UserAgent" 4
.IX Item "LWP::UserAgent"
.IP "HTML::Entities" 4
.IX Item "HTML::Entities"
.IP "URI::Escape" 4
.IX Item "URI::Escape"
.IP "HTML::WikiConverter" 4
.IX Item "HTML::WikiConverter"
.IP "HTML::WikiConverter::Diaspora" 4
.IX Item "HTML::WikiConverter::Diaspora"
.PD
.SH "AUTHOR"
.IX Header "AUTHOR"
\&\s-1FIXME\s0
.SH "VERSION"
.IX Header "VERSION"
0.01
